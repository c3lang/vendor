name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  update-packages:
    runs-on: macos-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3

      - name: prepare
        run: |
          brew install ruby

      - name: package
        run: |
          ruby package.rb

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: temp/*.c3l

  release:
    runs-on: ubuntu-latest
    needs: [update-packages]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: delete tag
        continue-on-error: true
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/latest',
              sha: context.sha
            })
      - name: create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/latest',
              sha: context.sha
            })

      - uses: actions/download-artifact@v3

      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest
          draft: false
          prerelease: false

      - name: upload raylib
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/raylib.c3l
          asset_name: raylib.c3l
          asset_content_type: application/zip

      - name: upload raylib5
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/raylib5.c3l
          asset_name: raylib5.c3l
          asset_content_type: application/zip

      - name: upload sdl2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/sdl2.c3l
          asset_name: sdl2.c3l
          asset_content_type: application/zip

      - name: upload tigr
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/tigr.c3l
          asset_name: tigr.c3l
          asset_content_type: application/zip

      - name: upload opengl
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/opengl.c3l
          asset_name: opengl.c3l
          asset_content_type: application/zip

      - name: upload vulkan
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/vulkan.c3l
          asset_name: vulkan.c3l
          asset_content_type: application/zip

      - name: upload tree_sitter
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/tree_sitter.c3l
          asset_name: tree_sitter.c3l
          asset_content_type: application/zip

      - name: upload curl
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/curl.c3l
          asset_name: curl.c3l
          asset_content_type: application/zip
      
      - name: upload glfw
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/glfw.c3l
          asset_name: glfw.c3l
          asset_content_type: application/zip

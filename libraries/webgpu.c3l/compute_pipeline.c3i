module webgpu;

typedef ComputePipeline = void*;

fn void ComputePipeline.setBindGroupLayout(ComputePipeline pipeline, CUInt groupIndex)
    @cname("wgpuComputePipelineSetBindGroup");

fn void ComputePipeline.setLabel(ComputePipeline pipeline, ZString label)
    @cname("wgpuComputePipelineSetLabel");

fn void ComputePipeline.reference(ComputePipeline pipeline) @cname("wgpuComputePipelineReference");

fn void ComputePipeline.release(ComputePipeline pipeline) @cname("wgpuComputePipelineRelease");

struct ComputePipelineDescriptor {
    ChainedStruct* next;
    ZString label;
    PipelineLayout layout;
    ProgrammableStageDescriptor compute;
}

struct ProgrammableStageDescriptor {
    ChainedStruct* next;
    ShaderModule shader;
    ZString entryPoint;
    usz constantCount;
    ConstantEntry* constants;
}